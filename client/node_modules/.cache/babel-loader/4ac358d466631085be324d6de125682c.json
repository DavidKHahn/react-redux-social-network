{"ast":null,"code":"var _jsxFileName = \"/Users/dhjkmedia/Desktop/social_network/client/src/components/profile/Profile.js\";\nimport PropTypes from 'prop-types';\nimport React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getProfileById } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileTop from './ProfileTop';\n\nconst Profile = ({\n  match,\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  },\n  auth\n}) => {\n  useEffect(() => {\n    // matches the id in the url\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, profile === null || loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/profiles\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Back to Profiles\"), auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && React.createElement(Link, {\n    to: \"/edit-profile\",\n    className: \"btn btn-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Edit Profile\"), React.createElement(\"div\", {\n    class: \"profile-grid my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(ProfileTop, {\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(ProfileAbout, {\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }))));\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["/Users/dhjkmedia/Desktop/social_network/client/src/components/profile/Profile.js"],"names":["PropTypes","React","Fragment","useEffect","connect","Link","getProfileById","Spinner","ProfileAbout","ProfileTop","Profile","match","profile","loading","auth","params","id","isAuthenticated","user","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASL,EAAAA,cAAT;AAAyBM,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAlC;AAAwDC,EAAAA;AAAxD,CAAD,KAAoE;AAChFX,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAG,IAAAA,cAAc,CAACK,KAAK,CAACI,MAAN,CAAaC,EAAd,CAAd;AACH,GAHQ,EAGN,CAACV,cAAD,EAAiBK,KAAK,CAACI,MAAN,CAAaC,EAA9B,CAHM,CAAT;AAIA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,OAAO,KAAK,IAAZ,IAAoBC,OAApB,GAA8B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9B,GAA4C,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACzC,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAqB,IAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADyC,EAKxCC,IAAI,CAACG,eAAL,IAAwBH,IAAI,CAACD,OAAL,KAAiB,KAAzC,IAAkDC,IAAI,CAACI,IAAL,CAAUC,GAAV,KAAkBP,OAAO,CAACM,IAAR,CAAaC,GAAjF,IACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,eAAT;AAAyB,IAAA,SAAS,EAAC,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANoC,EAUrC;AAAK,IAAA,KAAK,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEP,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEA,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAVqC,CADjD,CADJ;AAmBH,CAxBD;;AA0BAF,OAAO,CAACU,SAAR,GAAoB;AAChBd,EAAAA,cAAc,EAAEN,SAAS,CAACqB,IAAV,CAAeC,UADf;AAEhBV,EAAAA,OAAO,EAAEZ,SAAS,CAACuB,MAAV,CAAiBD,UAFV;AAGhBR,EAAAA,IAAI,EAAEd,SAAS,CAACuB,MAAV,CAAiBD;AAHP,CAApB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9Bb,EAAAA,OAAO,EAAEa,KAAK,CAACb,OADe;AAE9BE,EAAAA,IAAI,EAAEW,KAAK,CAACX;AAFkB,CAAL,CAA7B;;AAKA,eAAeV,OAAO,CAACoB,eAAD,EAAkB;AAAElB,EAAAA;AAAF,CAAlB,CAAP,CAA6CI,OAA7C,CAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getProfileById } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileTop from './ProfileTop';\n\nconst Profile = ({ match, getProfileById, profile: { profile, loading }, auth }) => {\n    useEffect(() => {\n        // matches the id in the url\n        getProfileById(match.params.id);\n    }, [getProfileById, match.params.id])\n    return (\n        <Fragment>\n            {profile === null || loading ? <Spinner /> : <Fragment>\n                <Link to='/profiles' className=\"btn btn-light\">\n                    Back to Profiles\n                </Link>\n\n                {auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id &&\n                    (<Link to='/edit-profile' className='btn btn-dark'>\n                        Edit Profile\n                    </Link>\n                    )}\n                    <div class=\"profile-grid my-1\">\n                        <ProfileTop profile={profile} />\n                        <ProfileAbout profile={profile} />\n                    </div>\n            </Fragment>}\n        </Fragment>\n    )\n}\n\nProfile.propTypes = {\n    getProfileById: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    profile: state.profile,\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, { getProfileById })(Profile)\n"]},"metadata":{},"sourceType":"module"}