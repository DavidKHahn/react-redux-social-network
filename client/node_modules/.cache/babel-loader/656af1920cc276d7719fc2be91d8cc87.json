{"ast":null,"code":"var _jsxFileName = \"/Users/dhjkmedia/Desktop/social_network/client/src/components/dashboard/Dashboard.js\";\nimport PropTypes from 'prop-types';\nimport React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { deleteAccount, getCurrentProfile } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\nimport DashboardActions from './DashboardActions';\nimport Education from './Education';\nimport Experience from './Experience';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  deleteAccount,\n  auth: {\n    user\n  },\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getCurrentProfile(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [getCurrentProfile]);\n  return loading && profile === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Dashboard\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), \"Welcome \", user && user.name), profile !== null ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(DashboardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(Experience, {\n    experience: profile.experience,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(Education, {\n    education: profile.education,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"my-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-danger\",\n    onClick: () => deleteAccount(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user-minus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), \"Delete My Account\"))) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"You have not set up a profile, please add some info\"), React.createElement(Link, {\n    to: \"/create-profile\",\n    className: \"btn btn-primary my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Create Profile\")));\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n  deleteAccount: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile,\n  deleteAccount\n})(Dashboard);","map":{"version":3,"sources":["/Users/dhjkmedia/Desktop/social_network/client/src/components/dashboard/Dashboard.js"],"names":["PropTypes","React","Fragment","useEffect","connect","Link","deleteAccount","getCurrentProfile","Spinner","DashboardActions","Education","Experience","Dashboard","auth","user","profile","loading","name","experience","education","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { deleteAccount, getCurrentProfile } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\nimport DashboardActions from './DashboardActions';\nimport Education from './Education';\nimport Experience from './Experience';\n\nconst Dashboard = ({ getCurrentProfile, deleteAccount, auth: { user }, profile: { profile, loading } }) => {\n    useEffect(() => {\n        getCurrentProfile();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [getCurrentProfile]);\n\n    return loading && profile === null ? (<Spinner />) : (<Fragment>\n        <h1 className=\"large text-primary\">Dashboard</h1>\n        <p className=\"lead\">\n            <i className=\"fas fa-user\"></i>Welcome {user && user.name}\n        </p>\n        {profile !== null ? (\n            <Fragment>\n                <DashboardActions />\n                <Experience experience={profile.experience} />\n                <Education education={profile.education} />\n                <div className=\"my-2\">\n                    <button className=\"btn btn-danger\" onClick={()=> deleteAccount()}>\n                         <i className=\"fas fa-user-minus\"></i>Delete My Account\n                    </button>\n                </div>\n            </Fragment>\n        ) : (\n            <Fragment>\n                <p>You have not set up a profile, please add some info</p>\n                <Link to='/create-profile' className=\"btn btn-primary my-1\">\n                    Create Profile\n                </Link>\n            </Fragment>\n        )}\n    </Fragment>\n    );\n}\n\nDashboard.propTypes = {\n    getCurrentProfile: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired,\n    deleteAccount: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    profile: state.profile\n})\n\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(Dashboard)\n\n"]},"metadata":{},"sourceType":"module"}