{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE } from './types'; // Get current user's profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.data.msg,\n        status: error.response.status\n      }\n    });\n  }\n}; // Create or Update Profile\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/profile', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created'), 'success');\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (error) {\n    const errors = error.response.data.errors;\n\n    if (error) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.data.msg,\n        status: error.response.status\n      }\n    });\n  }\n}; // Add Experience\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Added', 'success'));\n    history.push('/dashboard');\n  } catch (error) {\n    const errors = error.response.data.errors;\n\n    if (error) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.data.msg,\n        status: error.response.status\n      }\n    });\n  }\n}; // Add Education\n\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/education', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Added', 'Success'));\n    history.push('/dashboard');\n  } catch (error) {\n    const errors = error.response.data.errors;\n\n    if (error) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.data.msg,\n        status: error.response.status\n      }\n    });\n  }\n}; // Delete experience\n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.data.msg,\n        status: error.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/dhjkmedia/Desktop/social_network/client/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","PROFILE_ERROR","UPDATE_PROFILE","getCurrentProfile","dispatch","res","get","type","payload","data","error","msg","response","status","createProfile","formData","history","edit","config","headers","post","push","errors","forEach","addExperience","put","addEducation","deleteExperience","id","delete"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE } from './types';\n\n// Get current user's profile\nexport const getCurrentProfile = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/profile/me');\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: error.response.data.msg, status: error.response.status }\n        });\n    }\n}\n\n// Create or Update Profile\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const res = await axios.post('/api/profile', formData, config);\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created'), 'success');\n        if(!edit) {\n            history.push('/dashboard');\n        }\n\n    } catch (error) {\n        const errors = error.response.data.errors;\n        if(error){\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: error.response.data.msg, status: error.response.status }\n        });\n    }\n}\n\n// Add Experience\nexport const addExperience = (formData, history) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const res = await axios.put('/api/profile/experience', formData, config);\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Experience Added', 'success'));\n        history.push('/dashboard');\n\n    } catch (error) {\n        const errors = error.response.data.errors;\n\n        if(error){\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: error.response.data.msg, status: error.response.status }\n        });\n    }\n}\n\n// Add Education\nexport const addEducation = (formData, history) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const res = await axios.put('/api/profile/education', formData, config);\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        })\n\n        dispatch(setAlert('Education Added', 'Success'));\n        history.push('/dashboard');\n\n    } catch (error) {\n        const errors = error.response.data.errors;\n        if(error){\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: error.response.data.msg, status: error.response.status }\n        })\n    }\n}\n\n// Delete experience\nexport const deleteExperience = id => async dispatch => {\n    try {\n        const res = await axios.delete(`/api/profile/experience/${id}`);\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        })\n    } catch (error) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: error.response.data.msg, status: error.response.status }\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}