{"ast":null,"code":"import { DELETE_POST, GET_POSTS, POST_ERROR, UPDATE_LIKES } from '../actions/types';\nconst initialState = {\n  posts: [],\n  post: null,\n  error: {},\n  loading: true\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return { ...state,\n        posts: payload,\n        loading: false\n      };\n\n    case DELETE_POST:\n      return { ...state,\n        // return all posts except one matching id\n        posts: state.posts.filter(post => post._id !== payload),\n        loading: false\n      };\n\n    case POST_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    case UPDATE_LIKES:\n      return { ...state,\n        posts: state.posts.map(post => post._id === payload.id ? { ...post,\n          likes: payload.likes\n        } : post),\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/dhjkmedia/Desktop/social_network/client/src/reducers/post.js"],"names":["DELETE_POST","GET_POSTS","POST_ERROR","UPDATE_LIKES","initialState","posts","post","error","loading","state","action","type","payload","filter","_id","map","id","likes"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,UAAjC,EAA6CC,YAA7C,QAAiE,kBAAjE;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,IAAI,EAAE,IAFW;AAGjBC,EAAAA,KAAK,EAAE,EAHU;AAIjBC,EAAAA,OAAO,EAAE;AAJQ,CAArB;AAOA,eAAe,UAASC,KAAK,GAACL,YAAf,EAA6BM,MAA7B,EAAoC;AAC/C,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkBF,MAAxB;;AAEA,UAAOC,IAAP;AACI,SAAKV,SAAL;AACI,aAAO,EACP,GAAGQ,KADI;AAEPJ,QAAAA,KAAK,EAAEO,OAFA;AAGPJ,QAAAA,OAAO,EAAE;AAHF,OAAP;;AAKJ,SAAKR,WAAL;AACI,aAAO,EACP,GAAGS,KADI;AAEP;AACAJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYQ,MAAZ,CAAmBP,IAAI,IAAIA,IAAI,CAACQ,GAAL,KAAaF,OAAxC,CAHA;AAIPJ,QAAAA,OAAO,EAAE;AAJF,OAAP;;AAMJ,SAAKN,UAAL;AACI,aAAO,EACP,GAAGO,KADI;AAEPF,QAAAA,KAAK,EAAEK,OAFA;AAGPJ,QAAAA,OAAO,EAAE;AAHF,OAAP;;AAKJ,SAAKL,YAAL;AACI,aAAO,EACP,GAAGM,KADI;AAEPJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYU,GAAZ,CAAgBT,IAAI,IAAIA,IAAI,CAACQ,GAAL,KAAaF,OAAO,CAACI,EAArB,GAA0B,EAAC,GAAGV,IAAJ;AAAUW,UAAAA,KAAK,EAAEL,OAAO,CAACK;AAAzB,SAA1B,GAA6DX,IAArF,CAFA;AAGPE,QAAAA,OAAO,EAAE;AAHF,OAAP;;AAKJ;AACI,aAAOC,KAAP;AA3BR;AA6BH","sourcesContent":["import { DELETE_POST, GET_POSTS, POST_ERROR, UPDATE_LIKES } from '../actions/types';\n\nconst initialState = {\n    posts: [],\n    post: null,\n    error: {},\n    loading: true\n}\n\nexport default function(state=initialState, action){\n    const {type, payload} = action;\n\n    switch(type) {\n        case GET_POSTS:\n            return {\n            ...state,\n            posts: payload,\n            loading: false\n            }\n        case DELETE_POST:\n            return {\n            ...state,\n            // return all posts except one matching id\n            posts: state.posts.filter(post => post._id !== payload),\n            loading: false\n            }\n        case POST_ERROR:\n            return {\n            ...state,\n            error: payload,\n            loading: false\n            }\n        case UPDATE_LIKES:\n            return {\n            ...state,\n            posts: state.posts.map(post => post._id === payload.id ? {...post, likes: payload.likes } : post),\n            loading: false\n            }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}