{"ast":null,"code":"import _regeneratorRuntime from\"/Users/dhjkmedia/Desktop/social_network/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/dhjkmedia/Desktop/social_network/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/Users/dhjkmedia/Desktop/social_network/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/dhjkmedia/Desktop/social_network/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/dhjkmedia/Desktop/social_network/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState}from'react';import{connect}from'react-redux';import{Link,Redirect}from'react-router-dom';import{setAlert}from'../../actions/alert';import{register}from'../../actions/auth';// destructure props\nvar Register=function Register(_ref){var setAlert=_ref.setAlert,register=_ref.register,isAuthenticated=_ref.isAuthenticated;var _useState=useState({name:'',email:'',password:'',password2:''}),_useState2=_slicedToArray(_useState,2),formData=_useState2[0],setFormData=_useState2[1];var name=formData.name,email=formData.email,password=formData.password,password2=formData.password2;// handles input values and sets data in formData based on each input value type\nvar _onChange=function onChange(e){return setFormData(_objectSpread({},formData,_defineProperty({},e.target.name,e.target.value)));};var _onSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();if(password!==password2){setAlert('Passwords do not match','danger');}else{register({name:name,email:email,password:password});}case 2:case\"end\":return _context.stop();}}},_callee);}));return function onSubmit(_x){return _ref2.apply(this,arguments);};}();if(isAuthenticated){return React.createElement(Redirect,{to:\"/dashboard\"});}return React.createElement(Fragment,null,React.createElement(\"h1\",{className:\"large text-primary\"},\"Sign Up\"),React.createElement(\"p\",{className:\"lead\"},React.createElement(\"i\",{className:\"fas fa-user\"}),\" Create Your Account\"),React.createElement(\"form\",{className:\"form\",onSubmit:function onSubmit(e){return _onSubmit(e);}},React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"input\",{type:\"text\",placeholder:\"Name\",name:\"name\",value:name,onChange:function onChange(e){return _onChange(e);}})),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"input\",{type:\"email\",placeholder:\"Email Address\",name:\"email\",value:email,onChange:function onChange(e){return _onChange(e);}}),React.createElement(\"small\",{className:\"form-text\"},\"This site uses Gravatar so if you want a profile image, use a Gravatar email\")),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"input\",{type:\"password\",placeholder:\"Password\",name:\"password\"// minLength=\"6\"\n,value:password,onChange:function onChange(e){return _onChange(e);}})),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"input\",{type:\"password\",placeholder:\"Confirm Password\",name:\"password2\"// minLength=\"6\"\n,value:password2,onChange:function onChange(e){return _onChange(e);}})),React.createElement(\"input\",{type:\"submit\",className:\"btn btn-primary\",value:\"Register\"})),React.createElement(\"p\",{className:\"my-1\"},\"Already have an account? \",React.createElement(Link,{to:\"/login\"},\"Sign In\")));};var mapStateToProps=function mapStateToProps(state){return{isAuthenticated:state.auth.isAuthenticated};};export default connect(mapStateToProps,{setAlert:setAlert,register:register})(Register);","map":{"version":3,"sources":["/Users/dhjkmedia/Desktop/social_network/client/src/components/auth/Register.js"],"names":["React","Fragment","useState","connect","Link","Redirect","setAlert","register","Register","isAuthenticated","name","email","password","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\n\n// destructure props\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        password: '',\n        password2: ''\n    });\n\n    const { name, email, password, password2 } = formData;\n    // handles input values and sets data in formData based on each input value type\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        if(password !== password2){\n            setAlert('Passwords do not match', 'danger')\n        } else {\n            register({ name, email, password })\n        }\n    };\n\n    if(isAuthenticated) {\n        return <Redirect to=\"/dashboard\" />\n    }\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">Sign Up</h1>\n                <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\n                <form className=\"form\" onSubmit={e => onSubmit(e)} >\n                    <div className=\"form-group\">\n                    <input type=\"text\"\n                        placeholder=\"Name\"\n                        name=\"name\"\n                        value={name}\n                        onChange={e => onChange(e)}\n                    />\n                    </div>\n                    <div className=\"form-group\">\n                    <input type=\"email\"\n                        placeholder=\"Email Address\"\n                        name=\"email\"\n                        value={email}\n                        onChange={e => onChange(e)}\n                     />\n                    <small className=\"form-text\">\n                        This site uses Gravatar so if you want a profile image, use a\n                        Gravatar email</small>\n                    </div>\n                    <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        name=\"password\"\n                        // minLength=\"6\"\n                        value={password}\n                        onChange={e => onChange(e)}\n                    />\n                    </div>\n                    <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        placeholder=\"Confirm Password\"\n                        name=\"password2\"\n                        // minLength=\"6\"\n                        value={password2}\n                        onChange={e => onChange(e)}\n                    />\n                    </div>\n                    <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n                </form>\n                <p className=\"my-1\">\n                    Already have an account? <Link to=\"/login\">Sign In</Link>\n                </p>\n        </Fragment>\n    )\n}\n\nRegister.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    register: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { setAlert, register })(Register)"]},"metadata":{},"sourceType":"module"}