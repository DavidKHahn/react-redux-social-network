{"ast":null,"code":"import React,{Fragment,useEffect}from'react';import{connect}from'react-redux';import{Link}from'react-router-dom';import{getProfileById}from'../../actions/profile';import Spinner from'../layout/Spinner';import ProfileAbout from'./ProfileAbout';import ProfileEducation from'./ProfileEducation';import ProfileExperience from'./ProfileExperience';import ProfileGithub from'./ProfileGithub';import ProfileTop from'./ProfileTop';var Profile=function Profile(_ref){var match=_ref.match,getProfileById=_ref.getProfileById,_ref$profile=_ref.profile,profile=_ref$profile.profile,loading=_ref$profile.loading,auth=_ref.auth;useEffect(function(){// matches the id in the url\ngetProfileById(match.params.id);},[getProfileById,match.params.id]);return React.createElement(Fragment,null,profile===null||loading?React.createElement(Spinner,null):React.createElement(Fragment,null,React.createElement(Link,{to:\"/profiles\",className:\"btn btn-light\"},\"Back to Profiles\"),auth.isAuthenticated&&auth.loading===false&&auth.user._id===profile.user._id&&React.createElement(Link,{to:\"/edit-profile\",className:\"btn btn-dark\"},\"Edit Profile\"),React.createElement(\"div\",{class:\"profile-grid my-1\"},React.createElement(ProfileTop,{profile:profile}),React.createElement(ProfileAbout,{profile:profile}),React.createElement(\"div\",{className:\"profile-exp bg-white p-2\"},React.createElement(\"h2\",{className:\"text-primary\"},\"Experience\"),profile.experience.length>0?React.createElement(Fragment,null,profile.experience.map(function(experience){return React.createElement(ProfileExperience,{key:experience._id,experience:experience});})):React.createElement(\"h4\",null,\"No Experience credentials\")),React.createElement(\"div\",{className:\"profile-edu bg-white p-2\"},React.createElement(\"h2\",{className:\"text-primary\"},\"Education\"),profile.education.length>0?React.createElement(Fragment,null,profile.education.map(function(education){return React.createElement(ProfileEducation,{key:education._id,education:education});})):React.createElement(\"h4\",null,\"No Education credentials\")),profile.githubusername&&React.createElement(ProfileGithub,{username:profile.githubusername}))));};var mapStateToProps=function mapStateToProps(state){return{profile:state.profile,auth:state.auth};};export default connect(mapStateToProps,{getProfileById:getProfileById})(Profile);","map":{"version":3,"sources":["/Users/dhjkmedia/Desktop/social_network/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","connect","Link","getProfileById","Spinner","ProfileAbout","ProfileEducation","ProfileExperience","ProfileGithub","ProfileTop","Profile","match","profile","loading","auth","params","id","isAuthenticated","user","_id","experience","length","map","education","githubusername","mapStateToProps","state"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getProfileById } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileEducation from './ProfileEducation';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileGithub from './ProfileGithub';\nimport ProfileTop from './ProfileTop';\n\nconst Profile = ({ match, getProfileById, profile: { profile, loading }, auth }) => {\n    useEffect(() => {\n        // matches the id in the url\n        getProfileById(match.params.id);\n    }, [getProfileById, match.params.id])\n    return (\n        <Fragment>\n            {profile === null || loading ? <Spinner /> : <Fragment>\n                <Link to='/profiles' className=\"btn btn-light\">\n                    Back to Profiles\n                </Link>\n\n                {auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id &&\n                    (<Link to='/edit-profile' className='btn btn-dark'>\n                        Edit Profile\n                    </Link>\n                    )}\n                    <div class=\"profile-grid my-1\">\n                        <ProfileTop profile={profile} />\n                        <ProfileAbout profile={profile} />\n                        <div className=\"profile-exp bg-white p-2\">\n                            <h2 className=\"text-primary\">Experience</h2>\n                            {profile.experience.length > 0 ? (<Fragment>\n                                {profile.experience.map(experience => (\n                                    <ProfileExperience key={experience._id} experience={experience} />\n                                ))}\n                            </Fragment>) : (<h4>No Experience credentials</h4>)}\n                        </div>\n\n                        <div className=\"profile-edu bg-white p-2\">\n                            <h2 className=\"text-primary\">Education</h2>\n                            {profile.education.length > 0 ? (<Fragment>\n                                {profile.education.map(education => (\n                                    <ProfileEducation key={education._id} education={education} />\n                                ))}\n                            </Fragment>) : (<h4>No Education credentials</h4>)}\n                        </div>\n\n                    {profile.githubusername && (\n                        <ProfileGithub username={profile.githubusername} />\n                    )}\n                    </div>\n            </Fragment>}\n        </Fragment>\n    )\n}\n\nProfile.propTypes = {\n    getProfileById: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    profile: state.profile,\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, { getProfileById })(Profile)\n"]},"metadata":{},"sourceType":"module"}