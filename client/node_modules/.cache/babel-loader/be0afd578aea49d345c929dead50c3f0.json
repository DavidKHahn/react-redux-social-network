{"ast":null,"code":"import React,{Fragment}from'react';import Moment from'react-moment';import{connect}from'react-redux';import{Link}from'react-router-dom';import{addLike,deletePost,removeLike}from'../../actions/post';var PostItem=function PostItem(_ref){var addLike=_ref.addLike,deletePost=_ref.deletePost,removeLike=_ref.removeLike,auth=_ref.auth,_ref$post=_ref.post,_id=_ref$post._id,text=_ref$post.text,name=_ref$post.name,avatar=_ref$post.avatar,user=_ref$post.user,likes=_ref$post.likes,comments=_ref$post.comments,date=_ref$post.date,showActions=_ref.showActions;return React.createElement(\"div\",{className:\"post bg-white p-1 my-1\"},React.createElement(\"div\",null,React.createElement(Link,{to:\"/profile/\".concat(user)},React.createElement(\"img\",{className:\"round-img\",src:avatar,alt:\"\"}),React.createElement(\"h4\",null,name))),React.createElement(\"div\",null,React.createElement(\"p\",{className:\"my-1\"},text),React.createElement(\"p\",{className:\"post-date\"},\"Posted on \",React.createElement(Moment,{format:\"YYYY/MM/DD\"},date)),showActions&&React.createElement(Fragment,null,React.createElement(\"button\",{onClick:function onClick(e){return addLike(_id);},type:\"button\",className:\"btn btn-light\"},React.createElement(\"i\",{className:\"fas fa-thumbs-up\"}),' ',React.createElement(\"span\",null,likes.length>0&&React.createElement(\"span\",null,likes.length))),React.createElement(\"button\",{onClick:function onClick(e){return removeLike(_id);},type:\"button\",className:\"btn btn-light\"},React.createElement(\"i\",{className:\"fas fa-thumbs-down\"})),React.createElement(Link,{to:\"/posts/\".concat(_id),className:\"btn btn-primary\"},\"Discussion\",' ',comments.length>0&&React.createElement(\"span\",{className:\"comment-count\"},comments.length)),!auth.loading&&user===auth.user._id&&React.createElement(\"button\",{type:\"button\",className:\"btn btn-danger\",onClick:function onClick(e){return deletePost(_id);}},React.createElement(\"i\",{className:\"fas fa-times\"})))));};PostItem.defaultProps={showActions:true};var mapStateToProps=function mapStateToProps(state){return{auth:state.auth};};export default connect(mapStateToProps,{addLike:addLike,removeLike:removeLike,deletePost:deletePost})(PostItem);","map":{"version":3,"sources":["/Users/dhjkmedia/Desktop/social_network/client/src/components/posts/PostItem.js"],"names":["React","Fragment","Moment","connect","Link","addLike","deletePost","removeLike","PostItem","auth","post","_id","text","name","avatar","user","likes","comments","date","showActions","e","length","loading","defaultProps","mapStateToProps","state"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Fragment } from 'react';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { addLike, deletePost, removeLike } from '../../actions/post';\n\nconst PostItem = ({ addLike, deletePost, removeLike, auth, post: { _id, text, name, avatar, user, likes, comments, date }, showActions }) =>\n    (\n        <div className=\"post bg-white p-1 my-1\">\n            <div>\n                <Link to={`/profile/${user}`}>\n                    <img\n                        className=\"round-img\"\n                        src={avatar}\n                        alt=\"\"\n                    />\n                    <h4>{name}</h4>\n                </Link>\n            </div>\n            <div>\n                <p className=\"my-1\">\n                    {text}\n                </p>\n                <p className=\"post-date\">\n                    Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\n                </p>\n\n                {showActions && <Fragment>\n                    <button onClick={e => addLike(_id)} type=\"button\" className=\"btn btn-light\">\n                        <i className=\"fas fa-thumbs-up\"></i>{' '}\n                        <span>{likes.length > 0 && (<span>{likes.length}</span>)}</span>\n\n                    </button>\n                    <button onClick={e => removeLike(_id)} type=\"button\" className=\"btn btn-light\">\n                        <i className=\"fas fa-thumbs-down\"></i>\n                    </button>\n\n                    <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\n                        Discussion{' '}\n                        {comments.length > 0 && (\n                            <span className='comment-count'>{comments.length}</span>\n                        )}\n                    </Link>\n                    {!auth.loading && user === auth.user._id && (\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-danger\"\n                            onClick={e => deletePost(_id)}\n                        >\n                            <i className=\"fas fa-times\"></i>\n                        </button>\n                    )}\n                </Fragment>}\n\n            </div>\n        </div>\n    );\n\nPostItem.defaultProps = {\n    showActions: true\n}\n\nPostItem.propTypes = {\n    post: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired,\n    addLike: PropTypes.func.isRequired,\n    removeLike: PropTypes.func.isRequired,\n    deletePost: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(PostItem)\n"]},"metadata":{},"sourceType":"module"}