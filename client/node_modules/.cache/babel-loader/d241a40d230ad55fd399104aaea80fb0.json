{"ast":null,"code":"var _jsxFileName = \"/Users/dhjkmedia/Desktop/social_network/client/src/components/posts/PostItem.js\";\nimport PropTypes from 'prop-types';\nimport React, { Fragment } from 'react';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { addLike, deletePost, removeLike } from '../../actions/post';\n\nconst PostItem = ({\n  addLike,\n  deletePost,\n  removeLike,\n  auth,\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    likes,\n    comments,\n    date\n  },\n  showActions\n}) => React.createElement(\"div\", {\n  className: \"post bg-white p-1 my-1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, React.createElement(Link, {\n  to: `/profile/${user}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  className: \"round-img\",\n  src: avatar,\n  alt: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}), React.createElement(\"h4\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, name))), React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  className: \"my-1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, text), React.createElement(\"p\", {\n  className: \"post-date\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, \"Posted on \", React.createElement(Moment, {\n  format: \"YYYY/MM/DD\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, date)), showActions && React.createElement(Fragment, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, React.createElement(\"button\", {\n  onClick: e => addLike(_id),\n  type: \"button\",\n  className: \"btn btn-light\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  className: \"fas fa-thumbs-up\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}), ' ', React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, likes.length > 0 && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, likes.length))), React.createElement(\"button\", {\n  onClick: e => removeLike(_id),\n  type: \"button\",\n  className: \"btn btn-light\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  className: \"fas fa-thumbs-down\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n})), React.createElement(Link, {\n  to: `/posts/${_id}`,\n  className: \"btn btn-primary\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, \"Discussion\", ' ', comments.length > 0 && React.createElement(\"span\", {\n  className: \"comment-count\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}, comments.length)), !auth.loading && user === auth.user._id && React.createElement(\"button\", {\n  type: \"button\",\n  className: \"btn btn-danger\",\n  onClick: e => deletePost(_id),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  className: \"fas fa-times\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n})))));\n\nPostItem.defaultProps = {\n  showActions: true\n};\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike,\n  deletePost\n})(PostItem);","map":{"version":3,"sources":["/Users/dhjkmedia/Desktop/social_network/client/src/components/posts/PostItem.js"],"names":["PropTypes","React","Fragment","Moment","connect","Link","addLike","deletePost","removeLike","PostItem","auth","post","_id","text","name","avatar","user","likes","comments","date","showActions","e","length","loading","defaultProps","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Fragment } from 'react';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { addLike, deletePost, removeLike } from '../../actions/post';\n\nconst PostItem = ({ addLike, deletePost, removeLike, auth, post: { _id, text, name, avatar, user, likes, comments, date }, showActions }) =>\n    (\n        <div className=\"post bg-white p-1 my-1\">\n            <div>\n                <Link to={`/profile/${user}`}>\n                    <img\n                        className=\"round-img\"\n                        src={avatar}\n                        alt=\"\"\n                    />\n                    <h4>{name}</h4>\n                </Link>\n            </div>\n            <div>\n                <p className=\"my-1\">\n                    {text}\n                </p>\n                <p className=\"post-date\">\n                    Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\n                </p>\n\n                {showActions && <Fragment>\n                    <button onClick={e => addLike(_id)} type=\"button\" className=\"btn btn-light\">\n                        <i className=\"fas fa-thumbs-up\"></i>{' '}\n                        <span>{likes.length > 0 && (<span>{likes.length}</span>)}</span>\n\n                    </button>\n                    <button onClick={e => removeLike(_id)} type=\"button\" className=\"btn btn-light\">\n                        <i className=\"fas fa-thumbs-down\"></i>\n                    </button>\n\n                    <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\n                        Discussion{' '}\n                        {comments.length > 0 && (\n                            <span className='comment-count'>{comments.length}</span>\n                        )}\n                    </Link>\n                    {!auth.loading && user === auth.user._id && (\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-danger\"\n                            onClick={e => deletePost(_id)}\n                        >\n                            <i className=\"fas fa-times\"></i>\n                        </button>\n                    )}\n                </Fragment>}\n\n            </div>\n        </div>\n    );\n\n    PostItem.defaultProps = {\n        showActions: true\n    }\n\nPostItem.propTypes = {\n    post: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired,\n    addLike: PropTypes.func.isRequired,\n    removeLike: PropTypes.func.isRequired,\n    deletePost: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(PostItem)\n"]},"metadata":{},"sourceType":"module"}