{"ast":null,"code":"var _jsxFileName = \"/Users/dhjkmedia/Desktop/social_network/client/src/components/dashboard/Dashboard.js\";\nimport PropTypes from 'prop-types';\nimport React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getCurrentProfile } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth,\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getCurrentProfile(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [getCurrentProfile]);\n  return loading && profile === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Dashboard\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), \"Welcome \", user && user.name));\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n})(Dashboard);","map":{"version":3,"sources":["/Users/dhjkmedia/Desktop/social_network/client/src/components/dashboard/Dashboard.js"],"names":["PropTypes","React","Fragment","useEffect","connect","getCurrentProfile","Spinner","Dashboard","auth","profile","loading","user","name","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEF,EAAAA,iBAAF;AAAqBG,EAAAA,IAArB;AAA2BC,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AAApC,CAAD,KAAgE;AAC9EP,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,iBAAiB,GADL,CAEhB;AACC,GAHQ,EAGN,CAACA,iBAAD,CAHM,CAAT;AAKA,SAAOK,OAAO,IAAID,OAAO,KAAK,IAAvB,GAA8B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9B,GAA4C,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAC/C;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAD+C,EAE/C;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,cAC4CE,IAAI,IAAIA,IAAI,CAACC,IADzD,CAF+C,CAAnD;AAMH,CAZD;;AAcAL,SAAS,CAACM,SAAV,GAAsB;AAClBR,EAAAA,iBAAiB,EAAEL,SAAS,CAACc,IAAV,CAAeC,UADhB;AAElBP,EAAAA,IAAI,EAAER,SAAS,CAACgB,MAAV,CAAiBD,UAFL;AAGlBN,EAAAA,OAAO,EAAET,SAAS,CAACgB,MAAV,CAAiBD;AAHR,CAAtB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BV,EAAAA,IAAI,EAAEU,KAAK,CAACV,IADkB;AAE9BC,EAAAA,OAAO,EAAES,KAAK,CAACT;AAFe,CAAL,CAA7B;;AAKA,eAAeL,OAAO,CAACa,eAAD,EAAkB;AAAEZ,EAAAA;AAAF,CAAlB,CAAP,CAAgDE,SAAhD,CAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getCurrentProfile } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\n\nconst Dashboard = ({ getCurrentProfile, auth, profile: { profile, loading } }) => {\n    useEffect(() => {\n        getCurrentProfile();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [getCurrentProfile]);\n\n    return loading && profile === null ? <Spinner /> : <Fragment>\n        <h1 className=\"large text-primary\">Dashboard</h1>\n        <p className=\"lead\">\n            <i className=\"fas fa-user\"></i>Welcome {user && user.name}\n        </p>\n    </Fragment>;\n}\n\nDashboard.propTypes = {\n    getCurrentProfile: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    profile: state.profile\n})\n\nexport default connect(mapStateToProps, { getCurrentProfile })(Dashboard)\n\n"]},"metadata":{},"sourceType":"module"}