{"ast":null,"code":"import React,{useEffect}from'react';import{connect}from'react-redux';import{getGithubRepos}from'../../actions/profile';import Spinner from'../layout/Spinner';var ProfileGithub=function ProfileGithub(_ref){var username=_ref.username,getGithubRepos=_ref.getGithubRepos,repos=_ref.repos;useEffect(function(){getGithubRepos(username);},[getGithubRepos,username]);return React.createElement(\"div\",{className:\"profile-github\"},React.createElement(\"h2\",{className:\"text-primary my-1\"},\"Github Repos\"),repos===null?React.createElement(Spinner,null):repos.map(function(repo){return React.createElement(\"div\",{key:repo._id,className:\"repo bg-white p-1 my-1\"},React.createElement(\"div\",null,React.createElement(\"h4\",null,React.createElement(\"a\",{href:repo.html_url,target:\"_blank\",rel:\"noopener noreferrer\"},repo.name)),React.createElement(\"p\",null,repo.description)),React.createElement(\"div\",null,React.createElement(\"ul\",null,React.createElement(\"li\",{className:\"badge badge-primary\"},\"Stars: \",repo.stargazers_count),React.createElement(\"li\",{className:\"badge badge-dark\"},\"Watchers: \",repo.watchers_count),React.createElement(\"li\",{className:\"badge badge-light\"},\"Forks: \",repo.forks_count))));}));};var mapStateToProps=function mapStateToProps(state){return{repos:state.profile.repos};};export default connect(mapStateToProps,{getGithubRepos:getGithubRepos})(ProfileGithub);","map":{"version":3,"sources":["/Users/dhjkmedia/Desktop/social_network/client/src/components/profile/ProfileGithub.js"],"names":["React","useEffect","connect","getGithubRepos","Spinner","ProfileGithub","username","repos","map","repo","_id","html_url","name","description","stargazers_count","watchers_count","forks_count","mapStateToProps","state","profile"],"mappings":"AACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAyC,IAAtCC,CAAAA,QAAsC,MAAtCA,QAAsC,CAA5BH,cAA4B,MAA5BA,cAA4B,CAAZI,KAAY,MAAZA,KAAY,CAC3DN,SAAS,CAAC,UAAM,CACZE,cAAc,CAACG,QAAD,CAAd,CACH,CAFQ,CAEN,CAACH,cAAD,CAAiBG,QAAjB,CAFM,CAAT,CAIA,MACA,4BAAK,SAAS,CAAC,gBAAf,EACI,0BAAI,SAAS,CAAC,mBAAd,iBADJ,CAEKC,KAAK,GAAK,IAAV,CAAiB,oBAAC,OAAD,MAAjB,CACGA,KAAK,CAACC,GAAN,CAAU,SAAAC,IAAI,QACV,4BAAK,GAAG,CAAEA,IAAI,CAACC,GAAf,CAAoB,SAAS,CAAC,wBAA9B,EACI,+BACI,8BACI,yBAAG,IAAI,CAAED,IAAI,CAACE,QAAd,CAAwB,MAAM,CAAC,QAA/B,CAAwC,GAAG,CAAC,qBAA5C,EACKF,IAAI,CAACG,IADV,CADJ,CADJ,CAMI,6BAAIH,IAAI,CAACI,WAAT,CANJ,CADJ,CASI,+BACI,8BACI,0BAAI,SAAS,CAAC,qBAAd,YACYJ,IAAI,CAACK,gBADjB,CADJ,CAII,0BAAI,SAAS,CAAC,kBAAd,eACeL,IAAI,CAACM,cADpB,CAJJ,CAOI,0BAAI,SAAS,CAAC,mBAAd,YACYN,IAAI,CAACO,WADjB,CAPJ,CADJ,CATJ,CADU,EAAd,CAHR,CADA,CAgCH,CArCD,CA6CA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAC9BX,KAAK,CAAEW,KAAK,CAACC,OAAN,CAAcZ,KADS,CAAL,EAA7B,CAIA,cAAeL,CAAAA,OAAO,CAACe,eAAD,CAAkB,CAAEd,cAAc,CAAdA,cAAF,CAAlB,CAAP,CAA6CE,aAA7C,CAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getGithubRepos } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\n\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\n    useEffect(() => {\n        getGithubRepos(username)\n    }, [getGithubRepos, username])\n\n    return (\n    <div className=\"profile-github\">\n        <h2 className=\"text-primary my-1\">Github Repos</h2>\n        {repos === null ? <Spinner /> : (\n            repos.map(repo => (\n                <div key={repo._id} className='repo bg-white p-1 my-1'>\n                    <div>\n                        <h4>\n                            <a href={repo.html_url} target='_blank' rel='noopener noreferrer'>\n                                {repo.name}\n                            </a>\n                        </h4>\n                        <p>{repo.description}</p>\n                    </div>\n                    <div>\n                        <ul>\n                            <li className=\"badge badge-primary\">\n                                Stars: {repo.stargazers_count}\n                            </li>\n                            <li className=\"badge badge-dark\">\n                                Watchers: {repo.watchers_count}\n                            </li>\n                            <li className=\"badge badge-light\">\n                                Forks: {repo.forks_count}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            ))\n        )}\n    </div>\n    )\n}\n\nProfileGithub.propTypes = {\n    getGithubRepos: PropTypes.func.isRequired,\n    repos: PropTypes.array.isRequired,\n    username: PropTypes.string.isRequired\n}\n\nconst mapStateToProps = state => ({\n    repos: state.profile.repos\n})\n\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub)\n"]},"metadata":{},"sourceType":"module"}