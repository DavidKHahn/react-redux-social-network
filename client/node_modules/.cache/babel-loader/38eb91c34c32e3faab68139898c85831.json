{"ast":null,"code":"var _jsxFileName = \"/Users/dhjkmedia/Desktop/social_network/client/src/components/dashboard/Dashboard.js\";\nimport PropTypes from 'prop-types';\nimport React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getCurrentProfile } from '../../actions/profile';\nimport Experience from '../dashboard/Experience';\nimport Spinner from '../layout/Spinner';\nimport DashboardActions from './DashboardActions';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth: {\n    user\n  },\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getCurrentProfile(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [getCurrentProfile]);\n  return loading && profile === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Dashboard\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), \"Welcome \", user && user.name), profile !== null ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(DashboardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(Experience, {\n    experience: experience.profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"You have not set up a profile, please add some info\"), React.createElement(Link, {\n    to: \"/create-profile\",\n    className: \"btn btn-primary my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Create Profile\")));\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n})(Dashboard);","map":{"version":3,"sources":["/Users/dhjkmedia/Desktop/social_network/client/src/components/dashboard/Dashboard.js"],"names":["PropTypes","React","Fragment","useEffect","connect","Link","getCurrentProfile","Experience","Spinner","DashboardActions","Dashboard","auth","user","profile","loading","name","experience","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEJ,EAAAA,iBAAF;AAAqBK,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF,GAA3B;AAAqCC,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AAA9C,CAAD,KAA0E;AACxFX,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,iBAAiB,GADL,CAEhB;AACC,GAHQ,EAGN,CAACA,iBAAD,CAHM,CAAT;AAKA,SAAOQ,OAAO,IAAID,OAAO,KAAK,IAAvB,GAA+B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA/B,GAA+C,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAClD;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADkD,EAElD;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,cAC4CD,IAAI,IAAIA,IAAI,CAACG,IADzD,CAFkD,EAKjDF,OAAO,KAAK,IAAZ,GACG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAEG,UAAU,CAACH,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADH,GAMG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,iBAAT;AAA2B,IAAA,SAAS,EAAC,sBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,CAX8C,CAAtD;AAoBH,CA1BD;;AA4BAH,SAAS,CAACO,SAAV,GAAsB;AAClBX,EAAAA,iBAAiB,EAAEN,SAAS,CAACkB,IAAV,CAAeC,UADhB;AAElBR,EAAAA,IAAI,EAAEX,SAAS,CAACoB,MAAV,CAAiBD,UAFL;AAGlBN,EAAAA,OAAO,EAAEb,SAAS,CAACoB,MAAV,CAAiBD;AAHR,CAAtB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BX,EAAAA,IAAI,EAAEW,KAAK,CAACX,IADkB;AAE9BE,EAAAA,OAAO,EAAES,KAAK,CAACT;AAFe,CAAL,CAA7B;;AAKA,eAAeT,OAAO,CAACiB,eAAD,EAAkB;AAAEf,EAAAA;AAAF,CAAlB,CAAP,CAAgDI,SAAhD,CAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getCurrentProfile } from '../../actions/profile';\nimport Experience from '../dashboard/Experience';\nimport Spinner from '../layout/Spinner';\nimport DashboardActions from './DashboardActions';\n\nconst Dashboard = ({ getCurrentProfile, auth: { user }, profile: { profile, loading } }) => {\n    useEffect(() => {\n        getCurrentProfile();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [getCurrentProfile]);\n\n    return loading && profile === null ? (<Spinner />) : (<Fragment>\n        <h1 className=\"large text-primary\">Dashboard</h1>\n        <p className=\"lead\">\n            <i className=\"fas fa-user\"></i>Welcome {user && user.name}\n        </p>\n        {profile !== null ? (\n            <Fragment>\n                <DashboardActions />\n                <Experience experience={experience.profile} />\n            </Fragment>\n        ) : (\n            <Fragment>\n                <p>You have not set up a profile, please add some info</p>\n                <Link to='/create-profile' className=\"btn btn-primary my-1\">\n                    Create Profile\n                </Link>\n            </Fragment>\n        )}\n    </Fragment>\n    );\n}\n\nDashboard.propTypes = {\n    getCurrentProfile: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    profile: state.profile\n})\n\nexport default connect(mapStateToProps, { getCurrentProfile })(Dashboard)\n\n"]},"metadata":{},"sourceType":"module"}