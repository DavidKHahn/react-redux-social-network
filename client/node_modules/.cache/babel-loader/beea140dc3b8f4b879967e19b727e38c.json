{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { ADD_COMMENT, ADD_POST, DELETE_POST, GET_POST, GET_POSTS, POST_ERROR, UPDATE_LIKES } from './types'; // Get Posts\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: error.response.data.msg,\n        status: error.response.status\n      }\n    });\n  }\n}; // Get Post\n\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/posts/${id}`);\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: error.response.data.msg,\n        status: error.response.status\n      }\n    });\n  }\n}; // Add Like\n\nexport const addLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: error.response.data.msg,\n        status: error.response.status\n      }\n    });\n  }\n}; // Remove Like\n\nexport const removeLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: error.response.data.msg,\n        status: error.response.status\n      }\n    });\n  }\n}; // Delete Post\n\nexport const deletePost = id => async dispatch => {\n  try {\n    await axios.delete(`/api/posts/${id}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n    dispatch(setAlert('Post Removed', 'success'));\n  } catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: error.response.data.msg,\n        status: error.response.status\n      }\n    });\n  }\n}; // Add Post\n\nexport const addPost = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post(`/api/posts`, formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: error.response.data.msg,\n        status: error.response.status\n      }\n    });\n  }\n}; // Add Comment\n\nexport const addComment = (postId, formData) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post(`/api/posts/comment/${postId}`, formData, config);\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data\n    });\n    dispatch(setAlert('Comment Added', 'success'));\n  } catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: error.response.data.msg,\n        status: error.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/dhjkmedia/Desktop/social_network/client/src/actions/post.js"],"names":["axios","setAlert","ADD_COMMENT","ADD_POST","DELETE_POST","GET_POST","GET_POSTS","POST_ERROR","UPDATE_LIKES","getPosts","dispatch","res","get","type","payload","data","error","msg","response","status","getPost","id","addLike","put","likes","removeLike","deletePost","delete","addPost","formData","config","headers","post","addComment","postId"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\nimport { ADD_COMMENT, ADD_POST, DELETE_POST, GET_POST, GET_POSTS, POST_ERROR, UPDATE_LIKES } from './types';\n\n// Get Posts\nexport const getPosts = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/posts');\n\n        dispatch({\n            type: GET_POSTS,\n            payload: res.data\n        })\n    } catch (error) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: error.response.data.msg, status: error.response.status }\n        })\n    }\n}\n\n// Get Post\nexport const getPost = id => async dispatch => {\n    try {\n        const res = await axios.get(`/api/posts/${id}`);\n\n        dispatch({\n            type: GET_POST,\n            payload: res.data\n        })\n    } catch (error) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: error.response.data.msg, status: error.response.status }\n        })\n    }\n}\n\n// Add Like\nexport const addLike = id => async dispatch => {\n    try {\n        const res = await axios.put(`/api/posts/like/${id}`);\n\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: { id, likes: res.data }\n        })\n    } catch (error) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: error.response.data.msg, status: error.response.status }\n        })\n    }\n}\n\n// Remove Like\nexport const removeLike = id => async dispatch => {\n    try {\n        const res = await axios.put(`/api/posts/unlike/${id}`);\n\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: { id, likes: res.data }\n        })\n    } catch (error) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: error.response.data.msg, status: error.response.status }\n        })\n    }\n}\n\n// Delete Post\nexport const deletePost = id => async dispatch => {\n    try {\n        await axios.delete(`/api/posts/${id}`);\n\n        dispatch({\n            type: DELETE_POST,\n            payload: id\n        });\n\n        dispatch(setAlert('Post Removed', 'success'))\n    } catch (error) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: error.response.data.msg, status: error.response.status }\n        })\n    }\n}\n\n\n// Add Post\nexport const addPost = formData => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    try {\n        const res = await axios.post(`/api/posts`, formData, config);\n\n        dispatch({\n            type: ADD_POST,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Post Created', 'success'))\n    } catch (error) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: error.response.data.msg, status: error.response.status }\n        })\n    }\n}\n\n\n// Add Comment\nexport const addComment = (postId, formData) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    try {\n        const res = await axios.post(`/api/posts/comment/${postId}`, formData, config);\n\n        dispatch({\n            type: ADD_COMMENT,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Comment Added', 'success'))\n    } catch (error) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: error.response.data.msg, status: error.response.status }\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}