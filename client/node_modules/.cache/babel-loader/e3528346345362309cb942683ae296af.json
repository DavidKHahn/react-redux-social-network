{"ast":null,"code":"import _objectWithoutProperties from\"/Users/dhjkmedia/Desktop/social_network/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from'react';import{connect}from'react-redux';import{Redirect,Route}from'react-router-dom';var PrivateRoute=function PrivateRoute(_ref){var Component=_ref.component,_ref$auth=_ref.auth,isAuthenticated=_ref$auth.isAuthenticated,loading=_ref$auth.loading,rest=_objectWithoutProperties(_ref,[\"component\",\"auth\"]);return React.createElement(Route,Object.assign({},rest,{render:function render(props){return!isAuthenticated&&!loading?React.createElement(Redirect,{to:\"/login\"}):React.createElement(Component,props);}}));};var mapStateToProps=function mapStateToProps(state){return{auth:state.auth};};export default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"sources":["/Users/dhjkmedia/Desktop/social_network/client/src/components/routing/PrivateRoute.js"],"names":["React","connect","Redirect","Route","PrivateRoute","Component","component","auth","isAuthenticated","loading","rest","props","mapStateToProps","state"],"mappings":"qJACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,QAAT,CAAmBC,KAAnB,KAAgC,kBAAhC,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,UAAcC,CAAAA,SAAd,MAAGC,SAAH,gBAAyBC,IAAzB,CAAiCC,eAAjC,WAAiCA,eAAjC,CAAkDC,OAAlD,WAAkDA,OAAlD,CAAgEC,IAAhE,2DACjB,qBAAC,KAAD,kBAAWA,IAAX,EAAiB,MAAM,CAAE,gBAAAC,KAAK,QAAI,CAACH,eAAD,EAAoB,CAACC,OAArB,CAAgC,oBAAC,QAAD,EAAU,EAAE,CAAC,QAAb,EAAhC,CAA6D,oBAAC,SAAD,CAAeE,KAAf,CAAjE,EAA9B,GADiB,EAArB,CAQA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAC9BN,IAAI,CAAEM,KAAK,CAACN,IADkB,CAAL,EAA7B,CAIA,cAAeN,CAAAA,OAAO,CAACW,eAAD,CAAP,CAAyBR,YAAzB,CAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, auth: { isAuthenticated, loading }, ...rest }) => (\n    <Route {...rest} render={props => !isAuthenticated && !loading ? (<Redirect to='/login' />) : (<Component {...props} />)} />\n)\n\nPrivateRoute.propTypes = {\n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps)(PrivateRoute)\n\n"]},"metadata":{},"sourceType":"module"}