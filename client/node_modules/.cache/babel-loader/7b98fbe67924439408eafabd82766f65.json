{"ast":null,"code":"var _jsxFileName = \"/Users/dhjkmedia/Desktop/social_network/client/src/App.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { loadUser } from './actions/auth';\nimport './App.css';\nimport Landing from './components/layout/Landing';\nimport Navbar from './components/layout/Navbar';\nimport Routes from './components/routing/Routes';\nimport store from './store';\nimport setAuthToken from './utils/setAuthToken';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  // when state updates 'useEffect' will keep running unless we add '[]'\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Landing,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(Routes, {\n    component: Routes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/dhjkmedia/Desktop/social_network/client/src/App.js"],"names":["React","Fragment","useEffect","Provider","BrowserRouter","Router","Route","loadUser","Landing","Navbar","Routes","store","setAuthToken","localStorage","token","App","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;;AAEA,IAAGC,YAAY,CAACC,KAAhB,EAAuB;AACrBF,EAAAA,YAAY,CAACC,YAAY,CAACC,KAAd,CAAZ;AACD;;AAED,MAAMC,GAAG,GAAG,MAAM;AAChB;AACAb,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,CAACK,QAAN,CAAeT,QAAQ,EAAvB;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SACA,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEI,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAEH,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEE,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,CADF,CADF,CADA;AAaD,CAnBD;;AAqBA,eAAeK,GAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { loadUser } from './actions/auth';\nimport './App.css';\nimport Landing from './components/layout/Landing';\nimport Navbar from './components/layout/Navbar';\nimport Routes from './components/routing/Routes';\nimport store from './store';\nimport setAuthToken from './utils/setAuthToken';\n\nif(localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  // when state updates 'useEffect' will keep running unless we add '[]'\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n\n  return (\n  <Provider store={store}>\n    <Router>\n      <Fragment>\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Landing} />\n          <Routes component={Routes} />\n        </Switch>\n      </Fragment>\n    </Router>\n  </Provider>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}