{"ast":null,"code":"import axios from 'axios'; // import { setAlert } from './alert';\n\nimport { DELETE_POST, GET_POSTS, POST_ERROR, UPDATE_LIKES } from './types'; // Get Posts\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: error.response.data.msg,\n        status: error.response.status\n      }\n    });\n  }\n}; // Add Like\n\nexport const addLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: error.response.data.msg,\n        status: error.response.status\n      }\n    });\n  }\n}; // Remove Like\n\nexport const removeLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: error.response.data.msg,\n        status: error.response.status\n      }\n    });\n  }\n}; // Delete Post\n\nexport const deletePost = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/posts/${id}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: {\n        id\n      }\n    });\n    dispatch(setAlert('Post Removed', 'success'));\n  } catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: error.response.data.msg,\n        status: error.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/dhjkmedia/Desktop/social_network/client/src/actions/post.js"],"names":["axios","DELETE_POST","GET_POSTS","POST_ERROR","UPDATE_LIKES","getPosts","dispatch","res","get","type","payload","data","error","msg","response","status","addLike","id","put","likes","removeLike","deletePost","delete","setAlert"],"mappings":"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","sourcesContent":["import axios from 'axios';\n// import { setAlert } from './alert';\nimport { DELETE_POST, GET_POSTS, POST_ERROR, UPDATE_LIKES } from './types';\n\n// Get Posts\nexport const getPosts = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/posts');\n\n        dispatch({\n            type: GET_POSTS,\n            payload: res.data\n        })\n    } catch (error) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: error.response.data.msg, status: error.response.status }\n        })\n    }\n}\n\n// Add Like\nexport const addLike = id => async dispatch => {\n    try {\n        const res = await axios.put(`/api/posts/like/${id}`);\n\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: { id, likes: res.data }\n        })\n    } catch (error) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: error.response.data.msg, status: error.response.status }\n        })\n    }\n}\n\n// Remove Like\nexport const removeLike = id => async dispatch => {\n    try {\n        const res = await axios.put(`/api/posts/unlike/${id}`);\n\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: { id, likes: res.data }\n        })\n    } catch (error) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: error.response.data.msg, status: error.response.status }\n        })\n    }\n}\n\n// Delete Post\nexport const deletePost = id => async dispatch => {\n    try {\n        const res = await axios.delete(`/api/posts/${id}`);\n\n        dispatch({\n            type: DELETE_POST,\n            payload: { id }\n        });\n\n        dispatch(setAlert('Post Removed', 'success'))\n    } catch (error) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: error.response.data.msg, status: error.response.status }\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}