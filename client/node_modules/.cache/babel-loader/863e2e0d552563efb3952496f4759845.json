{"ast":null,"code":"var _jsxFileName = \"/Users/dhjkmedia/Desktop/social_network/client/src/components/posts/PostItem.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { addLike, removeLike } from '../../actions/post';\n\nconst PostItem = ({\n  addLike,\n  removeLike,\n  auth,\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    likes,\n    comments,\n    date\n  }\n}) => React.createElement(\"div\", {\n  className: \"post bg-white p-1 my-1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, React.createElement(\"a\", {\n  href: \"profile.html\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  className: \"round-img\",\n  src: avatar,\n  alt: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}), React.createElement(\"h4\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, name))), React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  className: \"my-1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, text), React.createElement(\"p\", {\n  className: \"post-date\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, \"Posted on \", React.createElement(Moment, {\n  format: \"YYYY/MM/DD\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, date)), React.createElement(\"button\", {\n  type: \"button\",\n  className: \"btn btn-light\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  className: \"fas fa-thumbs-up\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}), ' ', React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, likes.length > 0 && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, likes.length))), React.createElement(\"button\", {\n  type: \"button\",\n  className: \"btn btn-light\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  className: \"fas fa-thumbs-down\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n})), React.createElement(Link, {\n  to: `/posts/${_id}`,\n  className: \"btn btn-primary\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, \"Discussion \", comments.length > 0 && React.createElement(\"span\", {\n  className: \"comment-count\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, comments.length)), !auth.loading && user === auth.user._id && React.createElement(\"button\", {\n  type: \"button\",\n  className: \"btn btn-danger\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  className: \"fas fa-times\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}))));\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike\n})(PostItem);","map":{"version":3,"sources":["/Users/dhjkmedia/Desktop/social_network/client/src/components/posts/PostItem.js"],"names":["PropTypes","React","Moment","connect","Link","addLike","removeLike","PostItem","auth","post","_id","text","name","avatar","user","likes","comments","date","length","loading","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { addLike, removeLike } from '../../actions/post';\n\nconst PostItem = ({ addLike, removeLike, auth, post: { _id, text, name, avatar, user, likes, comments, date } }) =>\n        <div className=\"post bg-white p-1 my-1\">\n        <div>\n          <a href=\"profile.html\">\n            <img\n              className=\"round-img\"\n              src={avatar}\n              alt=\"\"\n            />\n            <h4>{name}</h4>\n          </a>\n        </div>\n        <div>\n          <p className=\"my-1\">\n            {text}\n          </p>\n           <p className=\"post-date\">\n            Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\n          </p>\n          <button type=\"button\" className=\"btn btn-light\">\n            <i className=\"fas fa-thumbs-up\"></i>{' '}\n            <span>{likes.length > 0 && (<span>{likes.length}</span>)}</span>\n\n          </button>\n          <button type=\"button\" className=\"btn btn-light\">\n            <i className=\"fas fa-thumbs-down\"></i>\n          </button>\n\n          <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\n            Discussion {comments.length > 0 && (\n                <span className='comment-count'>{comments.length}</span>\n            )}\n          </Link>\n\n          {!auth.loading && user === auth.user._id && (\n            <button\n            type=\"button\"\n            className=\"btn btn-danger\"\n            >\n            <i className=\"fas fa-times\"></i>\n            </button>\n          )}\n\n        </div>\n      </div>\n\nPostItem.propTypes = {\n    post: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired,\n    addLike: PropTypes.func.isRequired,\n    removeLike: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, {  addLike, removeLike })(PostItem)\n"]},"metadata":{},"sourceType":"module"}